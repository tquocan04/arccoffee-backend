worker_processes auto;

events {
	worker_connections 1024;
}

http {
	server_tokens off;
	charset utf-8;

	map $http_origin $cors {
		default "";
		"~*https?://(localhost:3000|localhost:3001|.*\.aaateammm\.online)" "true";
	}
	
	server {
		listen 80;
		listen [::]:80;
		server_name dotnet.aaateammm.online;

		proxy_connect_timeout       600;
		proxy_send_timeout          600;
		proxy_read_timeout          600;
		send_timeout                600;

		keepalive_timeout 65;

		location / {
			if ($cors = "true") {
				add_header Access-Control-Allow-Origin "$http_origin" always;
				add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
				add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
				add_header Access-Control-Allow-Credentials "true" always;
			}

			# Handle OPTIONS method for preflight request (CORS)
			if ($request_method = 'OPTIONS') {
				add_header Access-Control-Allow-Origin "$http_origin" always;
				add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS, PATCH" always;
				add_header Access-Control-Allow-Headers "Accept, Authorization, Cache-Control, Content-Type, DNT, If-Modified-Since, Keep-Alive, Origin, User-Agent, X-Requested-With" always;
				add_header Access-Control-Allow-Credentials "true" always;
				return 204;  # Respond with 204 No Content for OPTIONS request
			}

			proxy_pass http://api_arc:8080;
			proxy_http_version 1.1;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
		}
	}
}